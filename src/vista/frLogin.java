/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * frLogin.java
 *
 * Created on 03/11/2009, 19:48:30
 */
package vista;

//import entidades.Usuarios;
import Recursos.Soap;
import entidades.caja.CobroVenta;
import entidades.cliente.Persona;
import entidades.fidelizacion.FidelizadoNoEnviado;
import entidades.persona.Telefono;
import entidades.usuario.Usuario;
import facade.ClienteFacade;
import facade.FidelizadoNoEnviadoFacade;
import facade.UsuarioFacade;
import includes.Comunes;
import includes.SuperFrame;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.eclipse.persistence.exceptions.DatabaseException;

/**
 *
 * @author carlos
 */
public class frLogin extends SuperFrame {

    /**
     * Creates new form frLogin
     */
    public frLogin() {
        super("Autenticacion - Carnicerias la Tradicion");
        try {

            //UIManager.setLookAndFeel("org.fife.plaf.Office2003.Office2003LookAndFeel");
            //UIManager.setLookAndFeel("org.fife.plaf.OfficeXP.OfficeXPLookAndFeel");
            // UIManager.setLookAndFeel("org.fife.plaf.VisualStudio2005.VisualStudio2005LookAndFeel");
            //    com.sun.java.swing.plaf.gtk.GTKLookAndFeel
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel");
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {
            System.out.println("Error: " + e);
        } catch (UnsupportedLookAndFeelException ex) {
            try {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
                System.out.println("Error: " + e);
            }

        }
        initComponents();
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbUsuario = new javax.swing.JLabel();
        tfUsuario = new javax.swing.JTextField();
        lbContrasena = new javax.swing.JLabel();
        passContrasena = new javax.swing.JPasswordField();
        btIngresar = new javax.swing.JButton();
        jXBusyLabel1 = new org.jdesktop.swingx.JXBusyLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbUsuario.setText("Usuario");

        tfUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfUsuarioActionPerformed(evt);
            }
        });

        lbContrasena.setText("Contraseña");

        passContrasena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passContrasenaActionPerformed(evt);
            }
        });

        btIngresar.setText("Ingresar");
        btIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIngresarActionPerformed(evt);
            }
        });

        jXBusyLabel1.setText("Comprobando Nombre de Usuario y Contraseña");
        jXBusyLabel1.setBusy(true);
        jXBusyLabel1.setFont(new java.awt.Font("DejaVu Sans", 2, 13)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jXBusyLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbUsuario)
                            .addComponent(lbContrasena))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(btIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tfUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                            .addComponent(passContrasena))))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbUsuario)
                    .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbContrasena))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btIngresar)
                .addGap(12, 12, 12)
                .addComponent(jXBusyLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logoCarniceria1.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIngresarActionPerformed
        corroborarContrasena();
    }//GEN-LAST:event_btIngresarActionPerformed

    private void passContrasenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passContrasenaActionPerformed
        corroborarContrasena();
    }//GEN-LAST:event_passContrasenaActionPerformed

    private void tfUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfUsuarioActionPerformed
        passContrasena.requestFocus();
    }//GEN-LAST:event_tfUsuarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frLogin().setVisible(true);
                enviarFidelizadosPendientes();
            }

            private void enviarFidelizadosPendientes() {
                for (FidelizadoNoEnviado noEnviado : FidelizadoNoEnviadoFacade.getInstance().buscarNoEnviados()) {
                    enviarVentaSOAP(noEnviado.getCobroVenta());
                }
                
            }

            private void enviarVentaSOAP(CobroVenta cobroVenta) {
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append("HGM678leR54G99FFjv");
                stringBuilder.append("|");
                //DNI
                try {

                    stringBuilder.append(Comunes.quitarPuntosDNI(cobroVenta.getVenta().getDniCliente()));
                    stringBuilder.append("|");
                } catch (Exception e) {
                    stringBuilder.append("|");
                }
                //NOMBRE CLIENTE
                try {
                    stringBuilder.append(cobroVenta.getVenta().getCliente());
                    stringBuilder.append("|");
                } catch (Exception e) {
                    stringBuilder.append("|");
                }
                //TELEFONOS
                String celular = "0";
                String fijo = "0";

                if (!ClienteFacade.getInstance().getPersonaXDni(cobroVenta.getVenta().getDniCliente()).getTelefonos().isEmpty()) {
                    List<Telefono> listaTelefonos = ClienteFacade.getInstance().getPersonaXDni(cobroVenta.getVenta().getDniCliente()).getTelefonos();
                    for (Telefono telefono : listaTelefonos) {
                        if (telefono.getTipoTelefono().getDescripcion().contains("CELULAR")) {
                            celular = telefono.getNumero().trim();
                        }
                        if (telefono.getTipoTelefono().getDescripcion().contains("FIJO")) {
                            fijo = telefono.getNumero().trim();
                        }
                    }
                    //celular
                    stringBuilder.append(celular);
                    stringBuilder.append("|");
                    //fijo
                    stringBuilder.append(fijo);
                    stringBuilder.append("|");

                } else {
                    //celular
                    stringBuilder.append("0");
                    stringBuilder.append("|");
                    //fijo
                    stringBuilder.append("0");
                    stringBuilder.append("|");
                }

                //MAIL
                try {
                    if (!ClienteFacade.getInstance().getPersonaXDni(cobroVenta.getVenta().getDniCliente()).getCorreosElectronicos().isEmpty()) {
                        stringBuilder.append(ClienteFacade.getInstance().getPersonaXDni(cobroVenta.getVenta().getDniCliente()).getCorreosElectronicos().get(0));
                        stringBuilder.append("|");
                    } else {
                        //stringBuilder.append("nose@nose.com");
                        stringBuilder.append("|");
                    }

                } catch (Exception e) {
                    //stringBuilder.append("nose@nose.com");
                    stringBuilder.append("|");
                }
                //MONTO
                try {
                    stringBuilder.append(cobroVenta.getVenta().getMonto());
                    stringBuilder.append("|");
                } catch (Exception e) {
                    stringBuilder.append("0");
                    stringBuilder.append("|");
                }
                //COMPROBANTE
                try {
                    stringBuilder.append(cobroVenta.getVenta().getNumeroTicket());
                    stringBuilder.append("|");
                } catch (Exception e) {
                    stringBuilder.append("0");
                    stringBuilder.append("|");
                }
                //sucursal
                try {
                    stringBuilder.append(cobroVenta.getVenta().getSucursal().getCodigo());
                    stringBuilder.append("|");
                } catch (Exception e) {
                    stringBuilder.append("0");
                    stringBuilder.append("|");
                }
                //ID VENDEDOR
                try {
                    stringBuilder.append(cobroVenta.getVenta().getUsuario().getId());
                    stringBuilder.append("|");
                } catch (Exception e) {
                    stringBuilder.append("0");
                    stringBuilder.append("|");
                }
                //NOMBRE VENDEDOR
                try {
                    stringBuilder.append(cobroVenta.getVenta().getUsuario().getNombreCompleto());
                    stringBuilder.append("|");
                } catch (Exception e) {
                    stringBuilder.append("NN");
                    stringBuilder.append("|");
                }
                //FECHA NAC CLIENTE
                try {
                    SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
                    if (ClienteFacade.getInstance().getPersonaXDni(cobroVenta.getVenta().getDniCliente()).getFechaNacimiento() != null) {
                        stringBuilder.append(formatoFecha.format(ClienteFacade.getInstance().getPersonaXDni(cobroVenta.getVenta().getDniCliente()).getFechaNacimiento()));
                        stringBuilder.append("|");
                    } else {
                        stringBuilder.append("01/01/2019");
                        stringBuilder.append("|");
                    }
                } catch (Exception e) {
                    stringBuilder.append("01/01/2019");
                    stringBuilder.append("|");
                }
                //SEXO CLIENTE
                try {
                    if (ClienteFacade.getInstance().getPersonaXDni(cobroVenta.getVenta().getDniCliente()).getSexo() != null) {
                        Persona persona = ClienteFacade.getInstance().getPersonaXDni(cobroVenta.getVenta().getDniCliente());
                        if (persona.getSexo().getName().contains("MASCULINO")) {
                            stringBuilder.append("M");
                            stringBuilder.append("|");
                        }
                        if (persona.getSexo().getName().contains("FEMENINO")) {
                            stringBuilder.append("F");
                            stringBuilder.append("|");
                        }
                    } else {
                        stringBuilder.append("N");
                        stringBuilder.append("|");
                        stringBuilder.append("N");
                        stringBuilder.append("|");
                    }
                } catch (Exception e) {
                    stringBuilder.append("N");
                    stringBuilder.append("|");
                    stringBuilder.append("N");
                    stringBuilder.append("|");
                }
                //FECHA VENTA
                try {
                    SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
                    stringBuilder.append(formatoFecha.format(cobroVenta.getFecha()));
                    stringBuilder.append("|");

                } catch (Exception e) {
                    stringBuilder.append("01/01/2019");
                    stringBuilder.append("|");
                }
                //NUMERO DE SOCIO DNI
                try {
                    stringBuilder.append(cobroVenta.getVenta().getDniCliente());
                } catch (Exception e) {

                }
                //String strCadena = "HGM678leR54G99FFjv|30207103|Franco Zurita Perea|3834811718|414141|francozurita@gmail.com|5000|0|1|0|Franco Zurita|'14/4/1983|Masc|5/9/2019|1";
                String cadena = new String();
                System.out.println("CADENA: " + stringBuilder.toString());
                Runnable r = new Soap(stringBuilder.toString(), cobroVenta, "Reenvio");
                Thread t = new Thread(r);
                t.start();
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btIngresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private org.jdesktop.swingx.JXBusyLabel jXBusyLabel1;
    private javax.swing.JLabel lbContrasena;
    private javax.swing.JLabel lbUsuario;
    private javax.swing.JPasswordField passContrasena;
    private javax.swing.JTextField tfUsuario;
    // End of variables declaration//GEN-END:variables

    public void cargarPuesto() {
    }

    public void corroborarContrasena() {

        try {
            SwingWorker worker = new SwingWorker() {
                Usuario usuario = new Usuario();

                @Override
                protected Object doInBackground() throws Exception {
                    jXBusyLabel1.setVisible(true);
                    usuario.setNombreUsuario(tfUsuario.getText());

                    usuario.setContrasena(new String(passContrasena.getPassword()));
                    usuario = UsuarioFacade.getInstance().validar(usuario);
                    return null;
                }

                @Override
                protected void done() {
                    if (usuario.getId() != null) {
                        frPrincipal principal = new frPrincipal(usuario);
                        principal.setExtendedState(JFrame.MAXIMIZED_BOTH);
                        principal.setVisible(true);
                        cerrarVentana();
                    } else {
                        JOptionPane.showMessageDialog(null, "Nombre de Usuario y/o "
                                + "Contraseña incorrecta",
                                "Error", JOptionPane.ERROR_MESSAGE);
                    }
                    jXBusyLabel1.setVisible(false);
                }
            };
            worker.execute();
        } catch (DatabaseException ex) {
            JOptionPane.showMessageDialog(null, "No se puede establecer una "
                    + "conexión con el servidor", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cerrarVentana() {
        this.dispose();
    }

    private void inicializarComponentes() {
        this.setLocationRelativeTo(null);
        cargarPuesto();
        jXBusyLabel1.setVisible(false);
    }

    private void limpiarTextFields() {
        passContrasena.setText("");
        tfUsuario.requestFocus();
        tfUsuario.selectAll();
    }
}
